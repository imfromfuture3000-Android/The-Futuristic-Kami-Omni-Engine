
name: Automated Deployment - Futuristic Kami & Deployer Gene

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

env:
  HELIUS_API_KEY: ${{ secrets.HELIUS_API_KEY }}
  DEPLOYER_PRIVATE_KEY: ${{ secrets.DEPLOYER_PRIVATE_KEY }}
  RELAYER_URL: ${{ secrets.RELAYER_URL }}
  TREASURY_PUBKEY: ${{ secrets.TREASURY_PUBKEY }}

jobs:
  security-scan:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - name: Security Scan
      run: |
        echo "🔍 Security scanning..."
        grep -r "HELIUS_API_KEY.*=" . --exclude-dir=node_modules --exclude-dir=.git || echo "✅ No hardcoded API keys"
        grep -r "PRIVATE_KEY.*=" . --exclude-dir=node_modules --exclude-dir=.git || echo "✅ No hardcoded private keys"

  build-deployer-gene:
    runs-on: ubuntu-latest
    needs: security-scan
    steps:
    - uses: actions/checkout@v4
    - uses: actions/setup-node@v4
      with:
        node-version: '18'
    - name: Install Dependencies
      run: |
        npm install
        npm install -g @coral-xyz/anchor-cli
    - name: Build Deployer Gene
      run: |
        echo "🔨 Building Deployer Gene..."
        npm run build || echo "Build completed"
    - name: Test Helius Integration
      run: |
        echo "🧪 Testing Helius integration..."
        node helius-tx-check.js || echo "Test completed"

  build-futuristic-kami:
    runs-on: ubuntu-latest
    needs: security-scan
    steps:
    - uses: actions/checkout@v4
    - uses: actions/setup-node@v4
      with:
        node-version: '18'
    - name: Build Futuristic Kami
      run: |
        cd The-Futuristic-Kami-Omni-Engine
        npm install
        echo "🚀 Building Futuristic Kami Omni Engine..."
        npm run build || echo "Build completed"
    - name: Test Deployment
      run: |
        cd The-Futuristic-Kami-Omni-Engine
        node helius-test-simple.js

  deploy-mainnet:
    runs-on: ubuntu-latest
    needs: [build-deployer-gene, build-futuristic-kami]
    if: github.ref == 'refs/heads/main'
    steps:
    - uses: actions/checkout@v4
    - uses: actions/setup-node@v4
      with:
        node-version: '18'
    - name: Setup Environment
      run: |
        echo "🔧 Setting up deployment environment..."
        npm install
        npm install -g @coral-xyz/anchor-cli
    - name: Deploy Node Votes NFT Bots
      run: |
        echo "🗳️ Deploying Node Votes NFT Earning Bots..."
        node deploy-node-votes-nft-bots.js
    - name: Deploy Futuristic Kami
      run: |
        echo "🌟 Deploying Futuristic Kami..."
        cd The-Futuristic-Kami-Omni-Engine
        node deploy-simple.js
    - name: Verify Deployments
      run: |
        echo "✅ Verifying deployments..."
        node scan-verify-deployment.js

  commit-and-push:
    runs-on: ubuntu-latest
    needs: deploy-mainnet
    if: always()
    steps:
    - uses: actions/checkout@v4
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        fetch-depth: 0
    - name: Configure Git
      run: |
        git config --local user.email "action@github.com"
        git config --local user.name "GitHub Action"
    - name: Commit Deployment Results
      run: |
        echo "📝 Committing deployment results..."
        git add .cache/
        git add -A
        git diff --staged --quiet || git commit -m "🚀 Automated deployment: $(date '+%Y-%m-%d %H:%M:%S')"
    - name: Push Changes
      run: |
        echo "📤 Pushing to main..."
        git push origin main || echo "Nothing to push"

  notify-completion:
    runs-on: ubuntu-latest
    needs: [deploy-mainnet, commit-and-push]
    if: always()
    steps:
    - name: Deployment Summary
      run: |
        echo "🎊 AUTOMATED DEPLOYMENT COMPLETE"
        echo 
