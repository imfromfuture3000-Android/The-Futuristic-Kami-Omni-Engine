version: '3.8'

services:
  mcp-server:
    build:
      context: .
      dockerfile: Dockerfile.mcp
    ports:
      - "3001:3001"
    environment:
      - NODE_ENV=production
      - AZURE_OPENAI_KEY=${AZURE_OPENAI_KEY}
      - AZURE_OPENAI_ENDPOINT=${AZURE_OPENAI_ENDPOINT}
      - AZURE_STORAGE_ACCOUNT=${AZURE_STORAGE_ACCOUNT}
      - AZURE_KEYVAULT_NAME=${AZURE_KEYVAULT_NAME}
      - AZURE_COSMOS_ACCOUNT=${AZURE_COSMOS_ACCOUNT}
    volumes:
      - ./mcp-server-config.json:/app/mcp-server-config.json:ro
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3001/health"]
      interval: 30s
      timeout: 10s
      retries: 3
    restart: unless-stopped

  azure-mcp-server:
    build:
      context: .
      dockerfile: Dockerfile.azure-mcp
    ports:
      - "3002:3002"
    environment:
      - NODE_ENV=production
      - AZURE_MCP_PORT=3002
      - AZURE_SUBSCRIPTION_ID=${AZURE_SUBSCRIPTION_ID}
      - AZURE_STORAGE_ACCOUNT=${AZURE_STORAGE_ACCOUNT}
      - AZURE_KEYVAULT_NAME=${AZURE_KEYVAULT_NAME}
      - AZURE_COSMOS_ACCOUNT=${AZURE_COSMOS_ACCOUNT}
      - AZURE_COSMOS_KEY=${AZURE_COSMOS_KEY}
    volumes:
      - ./azure-mcp-config.json:/app/azure-mcp-config.json:ro
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3002/health"]
      interval: 30s
      timeout: 10s
      retries: 3
    restart: unless-stopped

  dashboard:
    build:
      context: ./dashboard
      dockerfile: Dockerfile
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=production
      - NEXT_PUBLIC_MCP_SERVER_URL=http://mcp-server:3001
      - NEXT_PUBLIC_AZURE_MCP_URL=http://azure-mcp-server:3002
    depends_on:
      - mcp-server
      - azure-mcp-server
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:3000/"]
      interval: 30s
      timeout: 10s
      retries: 3
    restart: unless-stopped

  nginx:
    image: nginx:alpine
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./ssl:/etc/ssl:ro
    depends_on:
      - dashboard
      - mcp-server
      - azure-mcp-server
    restart: unless-stopped

networks:
  default:
    driver: bridge

volumes:
  ssl_certs: